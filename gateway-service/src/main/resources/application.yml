# Gateway Service Configuration
spring:
  application:
    name: gateway-service
  
  # Database Configuration
  datasource:
    url: jdbc:mysql://localhost:3306/gateway_db?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
    username: gateway_user
    password: gateway_password
    driver-class-name: com.mysql.cj.jdbc.Driver
  
  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        format_sql: true
  
  # OAuth2 Configuration
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8084
      client:
        registration:
          gateway:
            client-id: gateway-client
            client-secret: gateway-secret
            scope: read,write
        provider:
          gateway:
            authorization-uri: http://localhost:8084/oauth/authorize
            token-uri: http://localhost:8084/oauth/token
  
  # Kafka Configuration
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: gateway-service-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
  
  # Gateway Configuration
  cloud:
    gateway:
      routes:
        - id: cbi-service
          uri: http://localhost:8081
          predicates:
            - Path=/api/cbi/**
          filters:
            - StripPrefix=1
        - id: schedule-service
          uri: http://localhost:8082
          predicates:
            - Path=/api/schedule/**
          filters:
            - StripPrefix=1
        - id: workflow-service
          uri: http://localhost:8083
          predicates:
            - Path=/api/workflow/**
          filters:
            - StripPrefix=1
        - id: admin-service
          uri: http://localhost:8080
          predicates:
            - Path=/api/admin/**
          filters:
            - StripPrefix=1
  
  # Native Image Configuration
  aot:
    enabled: true
  native:
    build-args: "--initialize-at-build-time=org.springframework.security"

server:
  port: 8084

# JWT Configuration
jwt:
  secret: mySecretKey123456789012345678901234567890
  expiration: 86400000

# Logging Configuration
logging:
  level:
    com.kafka.gateway: INFO
    org.springframework.security: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Management Endpoints
management:
  endpoints:
    web:
      exposure:
        include: "*"
    metrics:
      enabled: true
  endpoint:
    health:
      show-details: always
    info:
      enabled: true
    prometheus:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    tags:
      service: gateway-service
      application: ${spring.application.name}